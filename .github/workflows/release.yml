name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # ratchet:softprops/action-gh-release@v2
        with:
          name: v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build:
    name: Build with Nix
    needs: release
    strategy:
      matrix:
        include:
          - system: x86_64-linux
            os: ubuntu-latest
          - system: aarch64-linux
            os: ubuntu-24.04-arm
          - system: x86_64-darwin
            os: macos-13
          - system: aarch64-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    env:
      LAMBDA_VERSION: ${{ needs.release.outputs.version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # ratchet:cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:master
          extra_nix_config: |
            trusted-substituters = https://nix-community.cachix.org https://cache.nixos.org https://cuda-maintainers.cachix.org
            trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= cuda-maintainers.cachix.org-1:0dq3bujKpuEPMCX6U4WylrUDZ9JyUG0VpVZa7CNfq5E=

      - name: Setup Cachix
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # ratchet:cachix/cachix-action@v14
        with:
          name: dix
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build Lambda CLI
        run: |
          nix build .#lambda --print-build-logs --accept-flake-config --show-trace -v -L

      - name: Package Binary
        run: |
          mkdir -p artifacts/lm-${{ matrix.system }}/bin
          cp -L result/bin/lm artifacts/lm-${{ matrix.system }}/bin/
          cd artifacts
          zip -r lm-${{ matrix.system }}.zip lm-${{ matrix.system }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # ratchet:softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.release.outputs.version }}
          files: artifacts/lm-${{ matrix.system }}.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        with:
          name: lm-${{ matrix.system }}.zip
          path: artifacts/lm-${{ matrix.system }}.zip
